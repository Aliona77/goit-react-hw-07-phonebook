{"version":3,"sources":["redux/phonebook/phonebook-slice.js","components/Container/Container.styles.jsx","components/Container/Container.jsx","components/ContactForm/ContactForm.styles.jsx","components/Spinner/Spinner.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styles.jsx","components/ContactiListItem/ContactListItem.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/phonebook/pnonebook-store.js","index.js"],"names":["contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","body","name","number","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","Title","Containers","Container","title","children","Label","Input","ButtonAdd","Span","spin","keyframes","Spinner","CgSpinner","defaultProps","size","ContactForm","useState","setName","setNumber","isLoading","contacts","data","nameInputId","uuidv4","numberInputId","handleChange","event","target","value","reset","onSubmit","preventDefault","newContact","toLowerCase","find","contact","alert","toast","success","autoClose","type","placeholder","onChange","id","pattern","required","disabled","Contact","ContactItem","Text","ButtonDelete","ContactListItem","isDeleting","isloading","onClick","Filter","filter","e","currentTarget","ContactList","setContacts","isFetching","useEffect","normalizeFilter","filterValue","includes","map","App","addContact","createAction","payload","changeFilter","items","createReducer","actions","state","_","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","setupListeners","dispatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.214e2af8.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const contactApi = createApi({\n  reducerPath: \"contactApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://611ec94f9771bf001785c61a.mockapi.io/api/v1/\",\n  }),\n  tagTypes: [\"Contact\"],\n  endpoints: (builder) => ({\n    fetchContacts: builder.query({\n      query: () => \"/contacts\",\n      providesTags: [\"Contact\"],\n    }),\n    deleteContact: builder.mutation({\n      query: (contactId) => ({\n        url: `/contacts/${contactId}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"Contact\"],\n    }),\n    createContact: builder.mutation({\n      query: ({ name, number }) => ({\n        url: \"/contacts\",\n        method: \"POST\",\n        body: {\n          name: name,\n          number: number,\n        },\n      }),\n      invalidatesTags: [\"Contact\"],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n  useCreateContactMutation,\n} = contactApi;\n","import styled from '@emotion/styled/macro';\r\n\r\n\r\nexport const Title = styled.h1`\r\n   text-align: center;\r\n    color: #000;\r\n    font-weight: bold;\r\n    font-size: 40px;\r\n`;\r\nexport const Containers = styled.div`\r\n  width: 360px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 40px;\r\n  padding: 20px 40px;\r\n\r\n  background-color: rgb(47, 206, 255);\r\n  box-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\n  border-radius: 5px;\r\n  &:hover{\r\n      box-shadow: 0px 0px 5px  rgba(0,0,0,0.5);\r\n  }\r\n  `","\r\nimport { Title, Containers } from \"./Container.styles\";\r\n\r\nexport default function Container ({ title, children }) {\r\n    return (\r\n        <Containers>\r\n            <Title>{title}</Title>\r\n            {children}\r\n      </Containers>\r\n    )\r\n};\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const Label = styled.label`\r\nfont-size:18px;\r\nfont-weight:600;\r\njustify-content:center;\r\npadding-bottom: 15px;\r\nmargin:0;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: flex;\r\n  padding: 6px;\r\n  margin-bottom: 20px;\r\n  border-radius:5px;\r\n  min-width: 300px;\r\n  cursor: pointer;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\r\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\r\n\r\n    &:focus{\r\n        border: 2px solid #eee;\r\n        outline: none;\r\n    }\r\n`\r\nexport const ButtonAdd = styled.button`\r\n  background-color: #fff;\r\n  outline: none;\r\n  padding: 6px 8px;\r\n  font-size: 12px;\r\n  line-height: 12px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n   border-radius:5px;\r\n   border: 1px solid black;\r\n   &:hover {\r\n    box-shadow: 0 0 20px rgba(50, 50, 93, 0.25);\r\n    background: blue;\r\n  }\r\n  `\r\nexport const Span = styled.span`\r\n font-size: 20px;\r\n  font-weight: 400;\r\n  margin-bottom: 7px;\r\n  `","import styled from '@emotion/styled/macro';\nimport { keyframes } from '@emotion/react';\nimport { CgSpinner } from 'react-icons/cg';\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(1turn);\n}\n`;\n\nexport const Spinner = styled(CgSpinner)`\n  animation: ${spin} 0.85s linear infinite;\n`;\n\nSpinner.defaultProps = {\n  size: 40,\n};","import { useCreateContactMutation, useFetchContactsQuery } from '../../redux/phonebook/phonebook-slice';\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Label, Input, ButtonAdd, Span } from './ContactForm.styles'\r\n\r\n\r\nimport { toast } from 'react-hot-toast';\r\nimport {Spinner} from '../Spinner/Spinner';\r\n\r\n\r\nexport const ContactForm =() =>{\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('')\r\n\r\n\r\n  const [createContact, {isLoading}] = useCreateContactMutation();\r\n  const { data: contacts } = useFetchContactsQuery();\r\n  \r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n  \r\n\r\n    \r\n  const  handleChange = event => {\r\n  const { name, value } = event.target;\r\n      \r\nswitch(name){\r\n    case \"name\":\r\n        setName(value);\r\n        break;\r\n    \r\n    case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n    default: return;\r\n      };\r\n    };\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newContact = name.toLowerCase();\r\n    const addContacts = contacts.find(\r\n      contact => contact.name.toLowerCase() === newContact\r\n    );\r\n      \r\n    if ( addContacts) {\r\n      alert(`${name} is already in the contacts.`);\r\n      reset();\r\n      return;\r\n    } \r\n    createContact({ name, number });\r\n    toast.success('Contact saved', {autoClose: 2000})\r\n    \r\n    reset();\r\n  };\r\n  \r\n    \r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n     return (\r\n            <form onSubmit={handleSubmit}>\r\n            <Label>\r\n                <Span>Name</Span>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder= \"Enter name\"\r\n                         onChange={handleChange}\r\n                        value={name}\r\n                         id={nameInputId} \r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                          \r\n                    />\r\n            </Label>\r\n        \r\n            <Label>\r\n                <Span >Number</Span>\r\n                 <Input\r\n                  type=\"tel\"\r\n                    name=\"number\"\r\n                 placeholder=\"Enter number\"\r\n                  onChange={handleChange}\r\n                    value={number}\r\n                     id={numberInputId}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                   \r\n                />\r\n                 </Label>\r\n               \r\n          <ButtonAdd type=\"submit\" disabled={isLoading}>\r\n           {isLoading && <Spinner size={12} />}\r\n           ADD CONTACT\r\n          </ButtonAdd>\r\n              </form>\r\n        )\r\n}\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n","import styled from '@emotion/styled/macro';\r\n\r\n\r\n\r\nexport const Contact = styled.ul`\r\nwidth: 300px;\r\npadding: 0;\r\n`\r\n\r\nexport const ContactItem = styled.li`\r\ndisplay:flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\n\r\n`\r\nexport const Text = styled.p`\r\nfont-size:18px;\r\nfont-weight: 500;\r\n`\r\nexport const ButtonDelete = styled.button`\r\nbackground-color: #fff;\r\ncursor: pointer;\r\nmargin-left: 20px;\r\n  border-radius:5px;\r\n  border: 1px solid black;\r\n  cursor: pointer;\r\n  &:hover {\r\n    box-shadow: 0 0 20px rgba(50, 50, 93, 0.25);\r\n    background: blue;\r\n  }\r\n`","import {  ContactItem, ButtonDelete, Text } from '../ContactList/ContactList.styles'\r\nimport { useDeleteContactMutation } from '../../redux/phonebook/phonebook-slice';\r\n\r\n\r\nexport const ContactListItem = ({id, name, number }) => {\r\n\r\n    const [deleteContact, { isloading: isDeleting }] = useDeleteContactMutation();\r\n    \r\n    return (\r\n                <ContactItem>\r\n                    <Text>{name}:{number}\r\n                    </Text>\r\n                    <ButtonDelete type=\"button\" onClick={() => deleteContact(id)}>\r\n                        {isDeleting ? 'Deleting...' : 'Delete'}</ButtonDelete>\r\n                </ContactItem>\r\n        \r\n    )\r\n}\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Text = styled.p`\r\nfont-size:18px;\r\n`","import { Input } from '../ContactForm/ContactForm.styles';\r\nimport { Text } from './Filter.styles';\r\n\r\n\r\nconst Filter = ({filter}) =>{\r\n\r\nconst changeFilterInput= e => {\r\n    filter(e.currentTarget.value);\r\n  };\r\n    return (\r\n        <>\r\n            <Text>Find contact by name</Text>\r\n               <Input\r\n                type='text'\r\n                name='name'\r\n                placeholder=\"Name to search\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                onChange={changeFilterInput}\r\n                required>\r\n                </Input>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter;\r\n\r\n","import {useFetchContactsQuery } from '../../redux/phonebook/phonebook-slice';\r\nimport {ContactListItem} from '../ContactiListItem/ContactListItem';\r\nimport { useState, useEffect } from 'react';\r\nimport  {Spinner} from '../Spinner/Spinner';\r\nimport Filter from '../Filter/Filter';\r\nimport {Contact} from './ContactList.styles'\r\n\r\nexport const ContactList = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const { data, isFetching } = useFetchContactsQuery();\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setContacts(data);\r\n    }\r\n  }, [data]);\r\n\r\n  const onFilteredContacts = filter => {\r\n    if (filter) {\r\n      const normalizeFilter = filter.toLowerCase();\r\n      const filterValue = contacts.filter(({ name }) =>\r\n        name.toLowerCase().includes(normalizeFilter),\r\n      );\r\n\r\n      setContacts(filterValue);\r\n    } else {\r\n      setContacts(data);\r\n    }\r\n  };\r\n    return (\r\n        <>\r\n            <Filter filter ={onFilteredContacts}/>\r\n                {isFetching && (\r\n                <Spinner size={12} />)}\r\n            <Contact>\r\n                {contacts.map(contact => (\r\n            <ContactListItem key={contact.id} {...contact} />\r\n          ))}\r\n      </Contact>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useFetchContactsQuery } from './redux/phonebook/phonebook-slice'; \nimport Container from './components/Container/Container';\nimport {ContactForm }from './components/ContactForm/ContactForm.jsx';\nimport {ContactList} from './components/ContactList/ContactList';\nimport  {Spinner} from './components/Spinner/Spinner';\n\n\n\nexport const  App=()=>{\n  const { data: contacts, isFetching } = useFetchContactsQuery();\n\n    return (\n      <Container title=\"Phonebook\">\n        <ContactForm  />\n        <h2>Contacts</h2>\n        {isFetching && <Spinner/>}\n        {contacts  && (\n         <ContactList contacts={contacts} />\n        )}\n      </Container>\n    );\n  }\n\n\n","//===========REDUX_TOOLKIT==============\nimport { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContact = createAction(\"contacts/add\", ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name: name,\n    number: number,\n  },\n}));\n\nexport const deleteContact = createAction(\"contacts/delete\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport * as actions from \"./phonebook-actions\";\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\n// import logger from \"redux-logger\";\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n\n// import storage from \"redux-persist/lib/storage\";\n\nimport contactsReducer from \"./phonebook-reducer\";\nimport { contactApi } from \"./phonebook-slice\";\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    [contactApi.reducerPath]: contactApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware(),\n    contactApi.middleware,\n  ],\n});\n\nsetupListeners(store.dispatch);\n\n// const persistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n//   logger,\n// ];\n\n// export const store = configureStore({\n//   reducer: {\n//     contacts: persistReducer(persistConfig, contactsReducer),\n//     [contactApi]\n//   },\n//   middleware,\n//   devTools: process.env.NODE_ENV === \"development\",\n// });\n\n// const persistor = persistStore(store);\n\n// export default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport { App } from \"./App.jsx\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/phonebook/pnonebook-store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}